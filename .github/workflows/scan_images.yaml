# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

name: Scan images

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        description: Image runner for building the images
        default: ubuntu-22.04
      trivy-image-config:
        type: string
        description: Trivy YAML configuration for image testing that is checked in as part of the repo
      images:
        type: string
        description: JSON list of images to names to pull and scan
        default: '[]'
      upload-result:
        type: boolean
        description: Whether or not to push the trivy-report to the security tab
        default: false

jobs:
  scan-images:
    name: Scan image
    if: ${{ inputs.images != '[]' }}
    strategy:
      matrix:
        image: ${{ fromJSON(inputs.images) }}
    runs-on: ${{ inputs.runs-on }}
    permissions:
      security-events: write
      packages: read
    steps:
    - name: Identify Registry
      run: |
        REGISTRY=$(cut -d '/' -f 1 <<< ${{ matrix.image }})
        echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
        echo "IMAGE_REF=${{ matrix.image }}" >> $GITHUB_ENV
    - name: Login to Container Registry
      uses: docker/login-action@v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Pull Image
      run: docker pull ${IMAGE_REF}
    - uses: actions/checkout@v4
    - name: Run Github Trivy Image Action
      uses: aquasecurity/trivy-action@0.17.0
      if: inputs.trivy-image-config != ''
      with:
        image-ref: ${{ env.IMAGE_REF }}
        format: 'sarif'
        output: 'trivy-results.sarif'
      env:
        TRIVY_USERNAME: ${{ github.actor }}
        TRIVY_PASSWORD: ${{ github.token }}
    - name: Upload Trivy scan results to GitHub Security tab
      if: ${{ inputs.upload-result }}
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
    - name: Check trivyignore
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.46.0
        if [ -f ".trivyignore" ]
        then
          output=$(trivy image $IMAGE_REF --severity HIGH,CRITICAL -q -f json --ignorefile "" | jq -r '.Results[].Vulnerabilities[].VulnerabilityID' 2>/dev/null || echo "No vulnerabilities found")
          line=0
          while read CVE;
          do
            line=$(( line + 1 ))
            if [[ "$output" != *"$CVE"* ]] && [[ ! "$CVE" =~ ^#.* ]]
            then
            echo "::notice file=.trivyignore,line=${line}::$CVE not present anymore, can be safely removed."
            fi
          done < .trivyignore
        fi
      env:
        TRIVY_USERNAME: ${{ github.actor }}
        TRIVY_PASSWORD: ${{ github.token }}
